// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: supacrypt.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/grpc/grpc-swift

import GRPC
import NIO
import SwiftProtobuf

/// Usage: instantiate `Supacrypt_V1_SupacryptServiceClient`, then call methods of this protocol to make API calls.
public protocol Supacrypt_V1_SupacryptServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: Supacrypt_V1_SupacryptServiceClientInterceptorFactoryProtocol? { get }

  func generateKey(
    _ request: Supacrypt_V1_GenerateKeyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Supacrypt_V1_GenerateKeyRequest, Supacrypt_V1_GenerateKeyResponse>

  func signData(
    _ request: Supacrypt_V1_SignDataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Supacrypt_V1_SignDataRequest, Supacrypt_V1_SignDataResponse>

  func verifySignature(
    _ request: Supacrypt_V1_VerifySignatureRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Supacrypt_V1_VerifySignatureRequest, Supacrypt_V1_VerifySignatureResponse>

  func getKey(
    _ request: Supacrypt_V1_GetKeyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Supacrypt_V1_GetKeyRequest, Supacrypt_V1_GetKeyResponse>

  func listKeys(
    _ request: Supacrypt_V1_ListKeysRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Supacrypt_V1_ListKeysRequest, Supacrypt_V1_ListKeysResponse>

  func deleteKey(
    _ request: Supacrypt_V1_DeleteKeyRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Supacrypt_V1_DeleteKeyRequest, Supacrypt_V1_DeleteKeyResponse>

  func encryptData(
    _ request: Supacrypt_V1_EncryptDataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Supacrypt_V1_EncryptDataRequest, Supacrypt_V1_EncryptDataResponse>

  func decryptData(
    _ request: Supacrypt_V1_DecryptDataRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<Supacrypt_V1_DecryptDataRequest, Supacrypt_V1_DecryptDataResponse>
}

extension Supacrypt_V1_SupacryptServiceClientProtocol {
  public var serviceName: String {
    return "supacrypt.v1.SupacryptService"
  }

  public func generateKey(
    _ request: Supacrypt_V1_GenerateKeyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Supacrypt_V1_GenerateKeyRequest, Supacrypt_V1_GenerateKeyResponse> {
    return self.makeUnaryCall(
      path: Supacrypt_V1_SupacryptServiceClientMetadata.Methods.generateKey.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGenerateKeyInterceptors() ?? []
    )
  }

  public func signData(
    _ request: Supacrypt_V1_SignDataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Supacrypt_V1_SignDataRequest, Supacrypt_V1_SignDataResponse> {
    return self.makeUnaryCall(
      path: Supacrypt_V1_SupacryptServiceClientMetadata.Methods.signData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSignDataInterceptors() ?? []
    )
  }

  public func verifySignature(
    _ request: Supacrypt_V1_VerifySignatureRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Supacrypt_V1_VerifySignatureRequest, Supacrypt_V1_VerifySignatureResponse> {
    return self.makeUnaryCall(
      path: Supacrypt_V1_SupacryptServiceClientMetadata.Methods.verifySignature.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeVerifySignatureInterceptors() ?? []
    )
  }

  public func getKey(
    _ request: Supacrypt_V1_GetKeyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Supacrypt_V1_GetKeyRequest, Supacrypt_V1_GetKeyResponse> {
    return self.makeUnaryCall(
      path: Supacrypt_V1_SupacryptServiceClientMetadata.Methods.getKey.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetKeyInterceptors() ?? []
    )
  }

  public func listKeys(
    _ request: Supacrypt_V1_ListKeysRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Supacrypt_V1_ListKeysRequest, Supacrypt_V1_ListKeysResponse> {
    return self.makeUnaryCall(
      path: Supacrypt_V1_SupacryptServiceClientMetadata.Methods.listKeys.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeListKeysInterceptors() ?? []
    )
  }

  public func deleteKey(
    _ request: Supacrypt_V1_DeleteKeyRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Supacrypt_V1_DeleteKeyRequest, Supacrypt_V1_DeleteKeyResponse> {
    return self.makeUnaryCall(
      path: Supacrypt_V1_SupacryptServiceClientMetadata.Methods.deleteKey.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteKeyInterceptors() ?? []
    )
  }

  public func encryptData(
    _ request: Supacrypt_V1_EncryptDataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Supacrypt_V1_EncryptDataRequest, Supacrypt_V1_EncryptDataResponse> {
    return self.makeUnaryCall(
      path: Supacrypt_V1_SupacryptServiceClientMetadata.Methods.encryptData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEncryptDataInterceptors() ?? []
    )
  }

  public func decryptData(
    _ request: Supacrypt_V1_DecryptDataRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<Supacrypt_V1_DecryptDataRequest, Supacrypt_V1_DecryptDataResponse> {
    return self.makeUnaryCall(
      path: Supacrypt_V1_SupacryptServiceClientMetadata.Methods.decryptData.path,
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDecryptDataInterceptors() ?? []
    )
  }
}

@available(*, deprecated)
extension Supacrypt_V1_SupacryptServiceClient: @unchecked Sendable {}

@available(*, deprecated, renamed: "Supacrypt_V1_SupacryptServiceNIOClient")
public final class Supacrypt_V1_SupacryptServiceClient: Supacrypt_V1_SupacryptServiceClientProtocol {
  private let lock = Lock()
  private var _defaultCallOptions: CallOptions
  private var _interceptors: Supacrypt_V1_SupacryptServiceClientInterceptorFactoryProtocol?
  public let channel: GRPCChannel
  public var defaultCallOptions: CallOptions {
    get { self.lock.withLock { return self._defaultCallOptions } }
    set { self.lock.withLock { self._defaultCallOptions = newValue } }
  }
  public var interceptors: Supacrypt_V1_SupacryptServiceClientInterceptorFactoryProtocol? {
    get { self.lock.withLock { return self._interceptors } }
    set { self.lock.withLock { self._interceptors = newValue } }
  }

  public static func build(with configuration: GRPCChannelPool.Configuration) -> Supacrypt_V1_SupacryptServiceClient {
    let pool = GRPCChannelPool(configuration: configuration)
    return Supacrypt_V1_SupacryptServiceClient(channel: pool)
  }

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Supacrypt_V1_SupacryptServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self._defaultCallOptions = defaultCallOptions
    self._interceptors = interceptors
  }
}

public struct Supacrypt_V1_SupacryptServiceNIOClient: Supacrypt_V1_SupacryptServiceClientProtocol {
  public var channel: GRPCChannel
  public var defaultCallOptions: CallOptions
  public var interceptors: Supacrypt_V1_SupacryptServiceClientInterceptorFactoryProtocol?

  public init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: Supacrypt_V1_SupacryptServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

public protocol Supacrypt_V1_SupacryptServiceClientInterceptorFactoryProtocol: Sendable {
  func makeGenerateKeyInterceptors() -> [ClientInterceptor<Supacrypt_V1_GenerateKeyRequest, Supacrypt_V1_GenerateKeyResponse>]
  func makeSignDataInterceptors() -> [ClientInterceptor<Supacrypt_V1_SignDataRequest, Supacrypt_V1_SignDataResponse>]
  func makeVerifySignatureInterceptors() -> [ClientInterceptor<Supacrypt_V1_VerifySignatureRequest, Supacrypt_V1_VerifySignatureResponse>]
  func makeGetKeyInterceptors() -> [ClientInterceptor<Supacrypt_V1_GetKeyRequest, Supacrypt_V1_GetKeyResponse>]
  func makeListKeysInterceptors() -> [ClientInterceptor<Supacrypt_V1_ListKeysRequest, Supacrypt_V1_ListKeysResponse>]
  func makeDeleteKeyInterceptors() -> [ClientInterceptor<Supacrypt_V1_DeleteKeyRequest, Supacrypt_V1_DeleteKeyResponse>]
  func makeEncryptDataInterceptors() -> [ClientInterceptor<Supacrypt_V1_EncryptDataRequest, Supacrypt_V1_EncryptDataResponse>]
  func makeDecryptDataInterceptors() -> [ClientInterceptor<Supacrypt_V1_DecryptDataRequest, Supacrypt_V1_DecryptDataResponse>]
}

public enum Supacrypt_V1_SupacryptServiceClientMetadata {
  public static let serviceDescriptor = GRPCServiceDescriptor(
    name: "SupacryptService",
    fullName: "supacrypt.v1.SupacryptService",
    methods: [
      Supacrypt_V1_SupacryptServiceClientMetadata.Methods.generateKey,
      Supacrypt_V1_SupacryptServiceClientMetadata.Methods.signData,
      Supacrypt_V1_SupacryptServiceClientMetadata.Methods.verifySignature,
      Supacrypt_V1_SupacryptServiceClientMetadata.Methods.getKey,
      Supacrypt_V1_SupacryptServiceClientMetadata.Methods.listKeys,
      Supacrypt_V1_SupacryptServiceClientMetadata.Methods.deleteKey,
      Supacrypt_V1_SupacryptServiceClientMetadata.Methods.encryptData,
      Supacrypt_V1_SupacryptServiceClientMetadata.Methods.decryptData,
    ]
  )

  public enum Methods {
    public static let generateKey = GRPCMethodDescriptor(
      name: "GenerateKey",
      path: "/supacrypt.v1.SupacryptService/GenerateKey",
      type: GRPCCallType.unary
    )

    public static let signData = GRPCMethodDescriptor(
      name: "SignData",
      path: "/supacrypt.v1.SupacryptService/SignData",
      type: GRPCCallType.unary
    )

    public static let verifySignature = GRPCMethodDescriptor(
      name: "VerifySignature",
      path: "/supacrypt.v1.SupacryptService/VerifySignature",
      type: GRPCCallType.unary
    )

    public static let getKey = GRPCMethodDescriptor(
      name: "GetKey",
      path: "/supacrypt.v1.SupacryptService/GetKey",
      type: GRPCCallType.unary
    )

    public static let listKeys = GRPCMethodDescriptor(
      name: "ListKeys",
      path: "/supacrypt.v1.SupacryptService/ListKeys",
      type: GRPCCallType.unary
    )

    public static let deleteKey = GRPCMethodDescriptor(
      name: "DeleteKey",
      path: "/supacrypt.v1.SupacryptService/DeleteKey",
      type: GRPCCallType.unary
    )

    public static let encryptData = GRPCMethodDescriptor(
      name: "EncryptData",
      path: "/supacrypt.v1.SupacryptService/EncryptData",
      type: GRPCCallType.unary
    )

    public static let decryptData = GRPCMethodDescriptor(
      name: "DecryptData",
      path: "/supacrypt.v1.SupacryptService/DecryptData",
      type: GRPCCallType.unary
    )
  }
}

// Note: Protobuf message structs would also need to be defined, but are included in the pb.swift file